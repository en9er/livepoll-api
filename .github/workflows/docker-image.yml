name: Docker Compose on Tag

on:
  push:
    tags:
      - '*'

jobs:
  docker-compose:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    
    - name: Create .env file
      run: |
        echo "SECRET_KEY=${{ secrets.SECRET_KEY }}" >> .env
        echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" >> .env
        echo "POSTGRES_USER={{secrets.POSTGRES_USER}}"
        echo "POSTGRES_PASSWORD={{secrets.POSTGRES_PASSWORD}}"
        echo "POSTGRES_SERVER={{secrets.POSTGRES_SERVER}}"
        echo "POSTGRES_PORT={{secrets.POSTGRES_PORT}}
        echo "POSTGRES_DB={{secrets.POSTGRES_DB}}
      working-directory: .
    
    - name: Set up Docker Compose
      run: |
        # Install Docker Compose with sudo
        sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
        sudo chmod +x /usr/local/bin/docker-compose
        docker-compose --version
      shell: bash
    - name: Get Git Tag
      id: tag
      run: echo "::set-output name=tag::$(echo $GITHUB_REF | awk -F / '{print $3}')"
  
    - name: Login to Docker Hub
      run: |
        echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin
      env:
        DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
        DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
  
    - name: Build and Push Docker Images
      run: |
        VERSION=${{ github.ref }}
        sed -i "s|image: my-image:latest|image: my-image:${VERSION}|g" docker-compose.yml
        
        docker-compose -f docker-compose.yml build
        docker-compose -f docker-compose.yml push
      env:
        DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}  

    - name: Push Docker images to Docker Hub
      run: |
        docker tag livepoll-api:${{ steps.tag.outputs.tag }} "${{ secrets.DOCKERHUB_USERNAME }}/livepoll-api:${{ steps.tag.outputs.tag }}"
        docker push "${{ secrets.DOCKERHUB_USERNAME }}/livepoll-api:${{ steps.tag.outputs.tag }}"
      env:
        DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}




